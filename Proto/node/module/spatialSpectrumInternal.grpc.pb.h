// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: node/module/spatialSpectrumInternal.proto
#ifndef GRPC_node_2fmodule_2fspatialSpectrumInternal_2eproto__INCLUDED
#define GRPC_node_2fmodule_2fspatialSpectrumInternal_2eproto__INCLUDED

#include "node/module/spatialSpectrumInternal.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace zb {
namespace dcts {
namespace node {
namespace module {
namespace spatailSpectrum {
namespace internal {

class DeviceControlService final {
 public:
  static constexpr char const* service_full_name() {
    return "zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartPanoramicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartPanoramicRaw(context, request, cq));
    }
    virtual ::grpc::Status StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopPanoramicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopPanoramicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>> GetPanoramicSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>>(GetPanoramicSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>> AsyncGetPanoramicSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>>(AsyncGetPanoramicSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>> PrepareAsyncGetPanoramicSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>>(PrepareAsyncGetPanoramicSpectrumRaw(context, request, cq));
    }
    virtual ::grpc::Status StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartDiscreteBandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartDiscreteBandRaw(context, request, cq));
    }
    virtual ::grpc::Status StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopDiscreteBandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopDiscreteBandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>> GetDiscreteBandSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>>(GetDiscreteBandSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>> AsyncGetDiscreteBandSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>>(AsyncGetDiscreteBandSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>> PrepareAsyncGetDiscreteBandSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>>(PrepareAsyncGetDiscreteBandSpectrumRaw(context, request, cq));
    }
    virtual ::grpc::Status StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartSignalAnalysisRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartSignalAnalysisRaw(context, request, cq));
    }
    virtual ::grpc::Status StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopSignalAnalysisRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopSignalAnalysisRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>> GetSignalAnalysisSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>>(GetSignalAnalysisSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>> AsyncGetSignalAnalysisSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>>(AsyncGetSignalAnalysisSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>> PrepareAsyncGetSignalAnalysisSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>>(PrepareAsyncGetSignalAnalysisSpectrumRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> GetSignalAnalysisIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(GetSignalAnalysisIQRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> AsyncGetSignalAnalysisIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(AsyncGetSignalAnalysisIQRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> PrepareAsyncGetSignalAnalysisIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(PrepareAsyncGetSignalAnalysisIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>> GetSignalAnalysisResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>>(GetSignalAnalysisResultRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>> AsyncGetSignalAnalysisResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>>(AsyncGetSignalAnalysisResultRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>> PrepareAsyncGetSignalAnalysisResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>>(PrepareAsyncGetSignalAnalysisResultRaw(context, request, cq));
    }
    virtual ::grpc::Status StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartDirectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartDirectionRaw(context, request, cq));
    }
    virtual ::grpc::Status StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopDirectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopDirectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>> GetDirectionSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>>(GetDirectionSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>> AsyncGetDirectionSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>>(AsyncGetDirectionSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>> PrepareAsyncGetDirectionSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>>(PrepareAsyncGetDirectionSpectrumRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>> GetDirectionResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>>(GetDirectionResultRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>> AsyncGetDirectionResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>>(AsyncGetDirectionResultRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>> PrepareAsyncGetDirectionResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>>(PrepareAsyncGetDirectionResultRaw(context, request, cq));
    }
    virtual ::grpc::Status StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartIQRaw(context, request, cq));
    }
    virtual ::grpc::Status StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> GetIQData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(GetIQDataRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> AsyncGetIQData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(AsyncGetIQDataRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> PrepareAsyncGetIQData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(PrepareAsyncGetIQDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>> GetDeviceStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>>(GetDeviceStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>> AsyncGetDeviceStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>>(AsyncGetDeviceStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>> PrepareAsyncGetDeviceStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>>(PrepareAsyncGetDeviceStatusRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      virtual void StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetPanoramicSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* reactor) = 0;
      #else
      virtual void GetPanoramicSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* reactor) = 0;
      #endif
      virtual void StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDiscreteBandSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* reactor) = 0;
      #else
      virtual void GetDiscreteBandSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* reactor) = 0;
      #endif
      virtual void StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetSignalAnalysisSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* reactor) = 0;
      #else
      virtual void GetSignalAnalysisSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetSignalAnalysisIQ(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) = 0;
      #else
      virtual void GetSignalAnalysisIQ(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetSignalAnalysisResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* reactor) = 0;
      #else
      virtual void GetSignalAnalysisResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* reactor) = 0;
      #endif
      virtual void StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDirectionSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* reactor) = 0;
      #else
      virtual void GetDirectionSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDirectionResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* reactor) = 0;
      #else
      virtual void GetDirectionResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* reactor) = 0;
      #endif
      virtual void StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetIQData(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) = 0;
      #else
      virtual void GetIQData(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDeviceStatus(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* reactor) = 0;
      #else
      virtual void GetDeviceStatus(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartPanoramicRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartPanoramicRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopPanoramicRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopPanoramicRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* GetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* AsyncGetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* PrepareAsyncGetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartDiscreteBandRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartDiscreteBandRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopDiscreteBandRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopDiscreteBandRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* GetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* AsyncGetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* PrepareAsyncGetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartSignalAnalysisRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartSignalAnalysisRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopSignalAnalysisRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopSignalAnalysisRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* GetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* AsyncGetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* PrepareAsyncGetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* AsyncGetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* PrepareAsyncGetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* GetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* AsyncGetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* PrepareAsyncGetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartDirectionRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartDirectionRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopDirectionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopDirectionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* GetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* AsyncGetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* PrepareAsyncGetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* GetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* AsyncGetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* PrepareAsyncGetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartIQRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartIQRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* AsyncGetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* PrepareAsyncGetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* GetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* AsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* PrepareAsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartPanoramicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartPanoramicRaw(context, request, cq));
    }
    ::grpc::Status StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopPanoramicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopPanoramicRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>> GetPanoramicSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>>(GetPanoramicSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>> AsyncGetPanoramicSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>>(AsyncGetPanoramicSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>> PrepareAsyncGetPanoramicSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>>(PrepareAsyncGetPanoramicSpectrumRaw(context, request, cq));
    }
    ::grpc::Status StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartDiscreteBandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartDiscreteBandRaw(context, request, cq));
    }
    ::grpc::Status StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopDiscreteBandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopDiscreteBandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>> GetDiscreteBandSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>>(GetDiscreteBandSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>> AsyncGetDiscreteBandSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>>(AsyncGetDiscreteBandSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>> PrepareAsyncGetDiscreteBandSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>>(PrepareAsyncGetDiscreteBandSpectrumRaw(context, request, cq));
    }
    ::grpc::Status StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartSignalAnalysisRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartSignalAnalysisRaw(context, request, cq));
    }
    ::grpc::Status StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopSignalAnalysisRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopSignalAnalysisRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>> GetSignalAnalysisSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>>(GetSignalAnalysisSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>> AsyncGetSignalAnalysisSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>>(AsyncGetSignalAnalysisSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>> PrepareAsyncGetSignalAnalysisSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>>(PrepareAsyncGetSignalAnalysisSpectrumRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> GetSignalAnalysisIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(GetSignalAnalysisIQRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> AsyncGetSignalAnalysisIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(AsyncGetSignalAnalysisIQRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> PrepareAsyncGetSignalAnalysisIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(PrepareAsyncGetSignalAnalysisIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>> GetSignalAnalysisResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>>(GetSignalAnalysisResultRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>> AsyncGetSignalAnalysisResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>>(AsyncGetSignalAnalysisResultRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>> PrepareAsyncGetSignalAnalysisResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>>(PrepareAsyncGetSignalAnalysisResultRaw(context, request, cq));
    }
    ::grpc::Status StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartDirectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartDirectionRaw(context, request, cq));
    }
    ::grpc::Status StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopDirectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopDirectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>> GetDirectionSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>>(GetDirectionSpectrumRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>> AsyncGetDirectionSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>>(AsyncGetDirectionSpectrumRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>> PrepareAsyncGetDirectionSpectrum(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>>(PrepareAsyncGetDirectionSpectrumRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>> GetDirectionResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>>(GetDirectionResultRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>> AsyncGetDirectionResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>>(AsyncGetDirectionResultRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>> PrepareAsyncGetDirectionResult(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>>(PrepareAsyncGetDirectionResultRaw(context, request, cq));
    }
    ::grpc::Status StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStartIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStartIQRaw(context, request, cq));
    }
    ::grpc::Status StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> AsyncStopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(AsyncStopIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>> PrepareAsyncStopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>>(PrepareAsyncStopIQRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> GetIQData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(GetIQDataRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> AsyncGetIQData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(AsyncGetIQDataRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>> PrepareAsyncGetIQData(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>>(PrepareAsyncGetIQDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>> GetDeviceStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>>(GetDeviceStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>> AsyncGetDeviceStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>>(AsyncGetDeviceStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>> PrepareAsyncGetDeviceStatus(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>>(PrepareAsyncGetDeviceStatusRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetPanoramicSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* reactor) override;
      #else
      void GetPanoramicSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* reactor) override;
      #endif
      void StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDiscreteBandSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* reactor) override;
      #else
      void GetDiscreteBandSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* reactor) override;
      #endif
      void StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetSignalAnalysisSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* reactor) override;
      #else
      void GetSignalAnalysisSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetSignalAnalysisIQ(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) override;
      #else
      void GetSignalAnalysisIQ(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetSignalAnalysisResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* reactor) override;
      #else
      void GetSignalAnalysisResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* reactor) override;
      #endif
      void StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDirectionSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* reactor) override;
      #else
      void GetDirectionSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDirectionResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* reactor) override;
      #else
      void GetDirectionResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* reactor) override;
      #endif
      void StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetIQData(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) override;
      #else
      void GetIQData(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDeviceStatus(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* reactor) override;
      #else
      void GetDeviceStatus(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartPanoramicRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartPanoramicRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopPanoramicRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopPanoramicRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* GetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* AsyncGetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* PrepareAsyncGetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartDiscreteBandRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartDiscreteBandRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopDiscreteBandRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopDiscreteBandRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* GetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* AsyncGetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* PrepareAsyncGetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartSignalAnalysisRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartSignalAnalysisRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopSignalAnalysisRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopSignalAnalysisRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* GetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* AsyncGetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* PrepareAsyncGetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* AsyncGetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* PrepareAsyncGetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* GetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* AsyncGetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* PrepareAsyncGetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartDirectionRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartDirectionRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopDirectionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopDirectionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* GetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* AsyncGetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* PrepareAsyncGetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* GetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* AsyncGetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* PrepareAsyncGetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStartIQRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStartIQRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* AsyncStopIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* PrepareAsyncStopIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* AsyncGetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* PrepareAsyncGetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* GetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* AsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* PrepareAsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_StartPanoramic_;
    const ::grpc::internal::RpcMethod rpcmethod_StopPanoramic_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPanoramicSpectrum_;
    const ::grpc::internal::RpcMethod rpcmethod_StartDiscreteBand_;
    const ::grpc::internal::RpcMethod rpcmethod_StopDiscreteBand_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDiscreteBandSpectrum_;
    const ::grpc::internal::RpcMethod rpcmethod_StartSignalAnalysis_;
    const ::grpc::internal::RpcMethod rpcmethod_StopSignalAnalysis_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSignalAnalysisSpectrum_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSignalAnalysisIQ_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSignalAnalysisResult_;
    const ::grpc::internal::RpcMethod rpcmethod_StartDirection_;
    const ::grpc::internal::RpcMethod rpcmethod_StopDirection_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDirectionSpectrum_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDirectionResult_;
    const ::grpc::internal::RpcMethod rpcmethod_StartIQ_;
    const ::grpc::internal::RpcMethod rpcmethod_StopIQ_;
    const ::grpc::internal::RpcMethod rpcmethod_GetIQData_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDeviceStatus_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status StartPanoramic(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status StopPanoramic(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status GetPanoramicSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* writer);
    virtual ::grpc::Status StartDiscreteBand(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status StopDiscreteBand(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status GetDiscreteBandSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* writer);
    virtual ::grpc::Status StartSignalAnalysis(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status StopSignalAnalysis(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status GetSignalAnalysisSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* writer);
    virtual ::grpc::Status GetSignalAnalysisIQ(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer);
    virtual ::grpc::Status GetSignalAnalysisResult(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* writer);
    virtual ::grpc::Status StartDirection(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status StopDirection(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status GetDirectionSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* writer);
    virtual ::grpc::Status GetDirectionResult(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* writer);
    virtual ::grpc::Status StartIQ(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status StopIQ(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response);
    virtual ::grpc::Status GetIQData(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer);
    virtual ::grpc::Status GetDeviceStatus(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_StartPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartPanoramic() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_StartPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPanoramic(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPanoramic(::grpc::ServerContext* context, ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopPanoramic() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_StopPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPanoramic(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPanoramic(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPanoramicSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPanoramicSpectrum() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetPanoramicSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPanoramicSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPanoramicSpectrum(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartDiscreteBand() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_StartDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDiscreteBand(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartDiscreteBand(::grpc::ServerContext* context, ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopDiscreteBand() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_StopDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDiscreteBand(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopDiscreteBand(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDiscreteBandSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDiscreteBandSpectrum() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetDiscreteBandSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDiscreteBandSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDiscreteBandSpectrum(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartSignalAnalysis() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_StartSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartSignalAnalysis(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartSignalAnalysis(::grpc::ServerContext* context, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopSignalAnalysis() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_StopSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopSignalAnalysis(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopSignalAnalysis(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSignalAnalysisSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSignalAnalysisSpectrum() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetSignalAnalysisSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSignalAnalysisSpectrum(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSignalAnalysisIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSignalAnalysisIQ() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetSignalAnalysisIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSignalAnalysisIQ(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSignalAnalysisResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSignalAnalysisResult() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetSignalAnalysisResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSignalAnalysisResult(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartDirection() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_StartDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDirection(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartDirection(::grpc::ServerContext* context, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopDirection() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_StopDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDirection(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopDirection(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDirectionSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDirectionSpectrum() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetDirectionSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDirectionSpectrum(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(13, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDirectionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDirectionResult() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetDirectionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDirectionResult(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(14, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartIQ() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_StartIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartIQ(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartIQ(::grpc::ServerContext* context, ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopIQ() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_StopIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopIQ(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetIQData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetIQData() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetIQData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIQData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIQData(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(17, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceStatus(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(18, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_StartPanoramic<WithAsyncMethod_StopPanoramic<WithAsyncMethod_GetPanoramicSpectrum<WithAsyncMethod_StartDiscreteBand<WithAsyncMethod_StopDiscreteBand<WithAsyncMethod_GetDiscreteBandSpectrum<WithAsyncMethod_StartSignalAnalysis<WithAsyncMethod_StopSignalAnalysis<WithAsyncMethod_GetSignalAnalysisSpectrum<WithAsyncMethod_GetSignalAnalysisIQ<WithAsyncMethod_GetSignalAnalysisResult<WithAsyncMethod_StartDirection<WithAsyncMethod_StopDirection<WithAsyncMethod_GetDirectionSpectrum<WithAsyncMethod_GetDirectionResult<WithAsyncMethod_StartIQ<WithAsyncMethod_StopIQ<WithAsyncMethod_GetIQData<WithAsyncMethod_GetDeviceStatus<Service > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartPanoramic() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StartPanoramic(context, request, response); }));}
    void SetMessageAllocatorFor_StartPanoramic(
        ::grpc::experimental::MessageAllocator< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPanoramic(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartPanoramic(
      ::grpc::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartPanoramic(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopPanoramic() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StopPanoramic(context, request, response); }));}
    void SetMessageAllocatorFor_StopPanoramic(
        ::grpc::experimental::MessageAllocator< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPanoramic(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopPanoramic(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopPanoramic(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetPanoramicSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetPanoramicSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetPanoramicSpectrum(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetPanoramicSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPanoramicSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* GetPanoramicSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* GetPanoramicSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartDiscreteBand() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StartDiscreteBand(context, request, response); }));}
    void SetMessageAllocatorFor_StartDiscreteBand(
        ::grpc::experimental::MessageAllocator< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDiscreteBand(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartDiscreteBand(
      ::grpc::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartDiscreteBand(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopDiscreteBand() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StopDiscreteBand(context, request, response); }));}
    void SetMessageAllocatorFor_StopDiscreteBand(
        ::grpc::experimental::MessageAllocator< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDiscreteBand(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopDiscreteBand(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopDiscreteBand(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDiscreteBandSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDiscreteBandSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetDiscreteBandSpectrum(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetDiscreteBandSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDiscreteBandSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* GetDiscreteBandSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* GetDiscreteBandSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartSignalAnalysis() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StartSignalAnalysis(context, request, response); }));}
    void SetMessageAllocatorFor_StartSignalAnalysis(
        ::grpc::experimental::MessageAllocator< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartSignalAnalysis(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartSignalAnalysis(
      ::grpc::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartSignalAnalysis(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopSignalAnalysis() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StopSignalAnalysis(context, request, response); }));}
    void SetMessageAllocatorFor_StopSignalAnalysis(
        ::grpc::experimental::MessageAllocator< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopSignalAnalysis(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopSignalAnalysis(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopSignalAnalysis(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetSignalAnalysisSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetSignalAnalysisSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetSignalAnalysisSpectrum(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetSignalAnalysisSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* GetSignalAnalysisSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* GetSignalAnalysisSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetSignalAnalysisIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetSignalAnalysisIQ() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetSignalAnalysisIQ(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetSignalAnalysisIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetSignalAnalysisIQ(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetSignalAnalysisIQ(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetSignalAnalysisResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetSignalAnalysisResult() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetSignalAnalysisResult(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetSignalAnalysisResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* GetSignalAnalysisResult(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* GetSignalAnalysisResult(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartDirection() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StartDirection(context, request, response); }));}
    void SetMessageAllocatorFor_StartDirection(
        ::grpc::experimental::MessageAllocator< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(11);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDirection(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartDirection(
      ::grpc::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartDirection(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopDirection() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StopDirection(context, request, response); }));}
    void SetMessageAllocatorFor_StopDirection(
        ::grpc::experimental::MessageAllocator< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(12);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDirection(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopDirection(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopDirection(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDirectionSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDirectionSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(13,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetDirectionSpectrum(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetDirectionSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* GetDirectionSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* GetDirectionSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDirectionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDirectionResult() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(14,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetDirectionResult(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetDirectionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* GetDirectionResult(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* GetDirectionResult(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartIQ() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StartIQ(context, request, response); }));}
    void SetMessageAllocatorFor_StartIQ(
        ::grpc::experimental::MessageAllocator< ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(15);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartIQ(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartIQ(
      ::grpc::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartIQ(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopIQ() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) { return this->StopIQ(context, request, response); }));}
    void SetMessageAllocatorFor_StopIQ(
        ::grpc::experimental::MessageAllocator< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(16);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopIQ(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopIQ(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetIQData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetIQData() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(17,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetIQData(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetIQData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIQData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetIQData(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* GetIQData(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDeviceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(18,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request) { return this->GetDeviceStatus(context, request); }));
    }
    ~ExperimentalWithCallbackMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* GetDeviceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* GetDeviceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_StartPanoramic<ExperimentalWithCallbackMethod_StopPanoramic<ExperimentalWithCallbackMethod_GetPanoramicSpectrum<ExperimentalWithCallbackMethod_StartDiscreteBand<ExperimentalWithCallbackMethod_StopDiscreteBand<ExperimentalWithCallbackMethod_GetDiscreteBandSpectrum<ExperimentalWithCallbackMethod_StartSignalAnalysis<ExperimentalWithCallbackMethod_StopSignalAnalysis<ExperimentalWithCallbackMethod_GetSignalAnalysisSpectrum<ExperimentalWithCallbackMethod_GetSignalAnalysisIQ<ExperimentalWithCallbackMethod_GetSignalAnalysisResult<ExperimentalWithCallbackMethod_StartDirection<ExperimentalWithCallbackMethod_StopDirection<ExperimentalWithCallbackMethod_GetDirectionSpectrum<ExperimentalWithCallbackMethod_GetDirectionResult<ExperimentalWithCallbackMethod_StartIQ<ExperimentalWithCallbackMethod_StopIQ<ExperimentalWithCallbackMethod_GetIQData<ExperimentalWithCallbackMethod_GetDeviceStatus<Service > > > > > > > > > > > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_StartPanoramic<ExperimentalWithCallbackMethod_StopPanoramic<ExperimentalWithCallbackMethod_GetPanoramicSpectrum<ExperimentalWithCallbackMethod_StartDiscreteBand<ExperimentalWithCallbackMethod_StopDiscreteBand<ExperimentalWithCallbackMethod_GetDiscreteBandSpectrum<ExperimentalWithCallbackMethod_StartSignalAnalysis<ExperimentalWithCallbackMethod_StopSignalAnalysis<ExperimentalWithCallbackMethod_GetSignalAnalysisSpectrum<ExperimentalWithCallbackMethod_GetSignalAnalysisIQ<ExperimentalWithCallbackMethod_GetSignalAnalysisResult<ExperimentalWithCallbackMethod_StartDirection<ExperimentalWithCallbackMethod_StopDirection<ExperimentalWithCallbackMethod_GetDirectionSpectrum<ExperimentalWithCallbackMethod_GetDirectionResult<ExperimentalWithCallbackMethod_StartIQ<ExperimentalWithCallbackMethod_StopIQ<ExperimentalWithCallbackMethod_GetIQData<ExperimentalWithCallbackMethod_GetDeviceStatus<Service > > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_StartPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartPanoramic() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_StartPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPanoramic(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopPanoramic() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_StopPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPanoramic(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPanoramicSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPanoramicSpectrum() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetPanoramicSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPanoramicSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartDiscreteBand() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_StartDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDiscreteBand(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopDiscreteBand() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_StopDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDiscreteBand(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDiscreteBandSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDiscreteBandSpectrum() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetDiscreteBandSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDiscreteBandSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartSignalAnalysis() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_StartSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartSignalAnalysis(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopSignalAnalysis() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_StopSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopSignalAnalysis(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSignalAnalysisSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSignalAnalysisSpectrum() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetSignalAnalysisSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSignalAnalysisIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSignalAnalysisIQ() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetSignalAnalysisIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSignalAnalysisResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSignalAnalysisResult() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetSignalAnalysisResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartDirection() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_StartDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDirection(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopDirection() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_StopDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDirection(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDirectionSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDirectionSpectrum() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetDirectionSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDirectionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDirectionResult() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetDirectionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartIQ() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_StartIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartIQ(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopIQ() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_StopIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetIQData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetIQData() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetIQData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIQData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartPanoramic() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_StartPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPanoramic(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPanoramic(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopPanoramic() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_StopPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPanoramic(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPanoramic(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPanoramicSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPanoramicSpectrum() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetPanoramicSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPanoramicSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPanoramicSpectrum(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartDiscreteBand() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_StartDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDiscreteBand(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartDiscreteBand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopDiscreteBand() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_StopDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDiscreteBand(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopDiscreteBand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDiscreteBandSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDiscreteBandSpectrum() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetDiscreteBandSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDiscreteBandSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDiscreteBandSpectrum(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartSignalAnalysis() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_StartSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartSignalAnalysis(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartSignalAnalysis(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopSignalAnalysis() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_StopSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopSignalAnalysis(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopSignalAnalysis(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSignalAnalysisSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSignalAnalysisSpectrum() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetSignalAnalysisSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSignalAnalysisSpectrum(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSignalAnalysisIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSignalAnalysisIQ() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetSignalAnalysisIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSignalAnalysisIQ(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSignalAnalysisResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSignalAnalysisResult() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetSignalAnalysisResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSignalAnalysisResult(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartDirection() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_StartDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDirection(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartDirection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopDirection() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_StopDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDirection(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopDirection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDirectionSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDirectionSpectrum() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetDirectionSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDirectionSpectrum(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(13, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDirectionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDirectionResult() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetDirectionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDirectionResult(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(14, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartIQ() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_StartIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartIQ(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartIQ(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopIQ() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_StopIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopIQ(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetIQData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetIQData() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetIQData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIQData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIQData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(17, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(18, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartPanoramic() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartPanoramic(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPanoramic(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartPanoramic(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartPanoramic(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopPanoramic() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopPanoramic(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPanoramic(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopPanoramic(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopPanoramic(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetPanoramicSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetPanoramicSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetPanoramicSpectrum(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetPanoramicSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPanoramicSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetPanoramicSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetPanoramicSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartDiscreteBand() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartDiscreteBand(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDiscreteBand(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartDiscreteBand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartDiscreteBand(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopDiscreteBand() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopDiscreteBand(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDiscreteBand(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopDiscreteBand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopDiscreteBand(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDiscreteBandSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDiscreteBandSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetDiscreteBandSpectrum(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDiscreteBandSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDiscreteBandSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetDiscreteBandSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetDiscreteBandSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartSignalAnalysis() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartSignalAnalysis(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartSignalAnalysis(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartSignalAnalysis(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartSignalAnalysis(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopSignalAnalysis() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopSignalAnalysis(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopSignalAnalysis(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopSignalAnalysis(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopSignalAnalysis(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetSignalAnalysisSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetSignalAnalysisSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetSignalAnalysisSpectrum(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetSignalAnalysisSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetSignalAnalysisSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetSignalAnalysisSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetSignalAnalysisIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetSignalAnalysisIQ() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetSignalAnalysisIQ(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetSignalAnalysisIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetSignalAnalysisIQ(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetSignalAnalysisIQ(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetSignalAnalysisResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetSignalAnalysisResult() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetSignalAnalysisResult(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetSignalAnalysisResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSignalAnalysisResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetSignalAnalysisResult(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetSignalAnalysisResult(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartDirection() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartDirection(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartDirection(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartDirection(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartDirection(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopDirection() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopDirection(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopDirection(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopDirection(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopDirection(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDirectionSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDirectionSpectrum() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetDirectionSpectrum(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDirectionSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetDirectionSpectrum(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetDirectionSpectrum(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDirectionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDirectionResult() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetDirectionResult(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDirectionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDirectionResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetDirectionResult(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetDirectionResult(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartIQ() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartIQ(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartIQ(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartIQ(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartIQ(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopIQ() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopIQ(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopIQ(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopIQ(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetIQData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetIQData() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetIQData(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetIQData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIQData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetIQData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetIQData(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDeviceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const::grpc::ByteBuffer* request) { return this->GetDeviceStatus(context, request); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetDeviceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #else
    virtual ::grpc::experimental::ServerWriteReactor< ::grpc::ByteBuffer>* GetDeviceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartPanoramic() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStartPanoramic(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartPanoramic(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartPanoramic(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopPanoramic : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopPanoramic() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStopPanoramic(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopPanoramic() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopPanoramic(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopPanoramic(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartDiscreteBand() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStartDiscreteBand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartDiscreteBand(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartDiscreteBand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopDiscreteBand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopDiscreteBand() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStopDiscreteBand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopDiscreteBand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopDiscreteBand(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopDiscreteBand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartSignalAnalysis() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStartSignalAnalysis(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartSignalAnalysis(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartSignalAnalysis(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopSignalAnalysis : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopSignalAnalysis() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStopSignalAnalysis(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopSignalAnalysis() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopSignalAnalysis(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopSignalAnalysis(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartDirection() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStartDirection(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartDirection(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartDirection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopDirection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopDirection() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStopDirection(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopDirection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopDirection(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopDirection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartIQ() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStartIQ(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartIQ(::grpc::ServerContext* /*context*/, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartIQ(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopIQ() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* streamer) {
                       return this->StreamedStopIQ(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopIQ(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_StartPanoramic<WithStreamedUnaryMethod_StopPanoramic<WithStreamedUnaryMethod_StartDiscreteBand<WithStreamedUnaryMethod_StopDiscreteBand<WithStreamedUnaryMethod_StartSignalAnalysis<WithStreamedUnaryMethod_StopSignalAnalysis<WithStreamedUnaryMethod_StartDirection<WithStreamedUnaryMethod_StopDirection<WithStreamedUnaryMethod_StartIQ<WithStreamedUnaryMethod_StopIQ<Service > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetPanoramicSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetPanoramicSpectrum() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* streamer) {
                       return this->StreamedGetPanoramicSpectrum(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetPanoramicSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPanoramicSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetPanoramicSpectrum(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetDiscreteBandSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetDiscreteBandSpectrum() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* streamer) {
                       return this->StreamedGetDiscreteBandSpectrum(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetDiscreteBandSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDiscreteBandSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetDiscreteBandSpectrum(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetSignalAnalysisSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetSignalAnalysisSpectrum() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* streamer) {
                       return this->StreamedGetSignalAnalysisSpectrum(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetSignalAnalysisSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSignalAnalysisSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetSignalAnalysisSpectrum(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetSignalAnalysisIQ : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetSignalAnalysisIQ() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* streamer) {
                       return this->StreamedGetSignalAnalysisIQ(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetSignalAnalysisIQ() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSignalAnalysisIQ(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetSignalAnalysisIQ(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetSignalAnalysisResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetSignalAnalysisResult() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* streamer) {
                       return this->StreamedGetSignalAnalysisResult(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetSignalAnalysisResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSignalAnalysisResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetSignalAnalysisResult(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetDirectionSpectrum : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetDirectionSpectrum() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* streamer) {
                       return this->StreamedGetDirectionSpectrum(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetDirectionSpectrum() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDirectionSpectrum(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetDirectionSpectrum(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetDirectionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetDirectionResult() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* streamer) {
                       return this->StreamedGetDirectionResult(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetDirectionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDirectionResult(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetDirectionResult(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetIQData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetIQData() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* streamer) {
                       return this->StreamedGetIQData(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetIQData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetIQData(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetIQData(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* streamer) {
                       return this->StreamedGetDeviceStatus(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetDeviceStatus(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetPanoramicSpectrum<WithSplitStreamingMethod_GetDiscreteBandSpectrum<WithSplitStreamingMethod_GetSignalAnalysisSpectrum<WithSplitStreamingMethod_GetSignalAnalysisIQ<WithSplitStreamingMethod_GetSignalAnalysisResult<WithSplitStreamingMethod_GetDirectionSpectrum<WithSplitStreamingMethod_GetDirectionResult<WithSplitStreamingMethod_GetIQData<WithSplitStreamingMethod_GetDeviceStatus<Service > > > > > > > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_StartPanoramic<WithStreamedUnaryMethod_StopPanoramic<WithSplitStreamingMethod_GetPanoramicSpectrum<WithStreamedUnaryMethod_StartDiscreteBand<WithStreamedUnaryMethod_StopDiscreteBand<WithSplitStreamingMethod_GetDiscreteBandSpectrum<WithStreamedUnaryMethod_StartSignalAnalysis<WithStreamedUnaryMethod_StopSignalAnalysis<WithSplitStreamingMethod_GetSignalAnalysisSpectrum<WithSplitStreamingMethod_GetSignalAnalysisIQ<WithSplitStreamingMethod_GetSignalAnalysisResult<WithStreamedUnaryMethod_StartDirection<WithStreamedUnaryMethod_StopDirection<WithSplitStreamingMethod_GetDirectionSpectrum<WithSplitStreamingMethod_GetDirectionResult<WithStreamedUnaryMethod_StartIQ<WithStreamedUnaryMethod_StopIQ<WithSplitStreamingMethod_GetIQData<WithSplitStreamingMethod_GetDeviceStatus<Service > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace internal
}  // namespace spatailSpectrum
}  // namespace module
}  // namespace node
}  // namespace dcts
}  // namespace zb


#endif  // GRPC_node_2fmodule_2fspatialSpectrumInternal_2eproto__INCLUDED
