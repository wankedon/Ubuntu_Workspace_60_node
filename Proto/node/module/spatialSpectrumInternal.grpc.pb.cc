// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: node/module/spatialSpectrumInternal.proto

#include "node/module/spatialSpectrumInternal.pb.h"
#include "node/module/spatialSpectrumInternal.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace zb {
namespace dcts {
namespace node {
namespace module {
namespace spatailSpectrum {
namespace internal {

static const char* DeviceControlService_method_names[] = {
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StartPanoramic",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StopPanoramic",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetPanoramicSpectrum",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StartDiscreteBand",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StopDiscreteBand",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetDiscreteBandSpectrum",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StartSignalAnalysis",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StopSignalAnalysis",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetSignalAnalysisSpectrum",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetSignalAnalysisIQ",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetSignalAnalysisResult",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StartDirection",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StopDirection",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetDirectionSpectrum",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetDirectionResult",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StartIQ",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/StopIQ",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetIQData",
  "/zb.dcts.node.module.spatailSpectrum.internal.DeviceControlService/GetDeviceStatus",
};

std::unique_ptr< DeviceControlService::Stub> DeviceControlService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< DeviceControlService::Stub> stub(new DeviceControlService::Stub(channel));
  return stub;
}

DeviceControlService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_StartPanoramic_(DeviceControlService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StopPanoramic_(DeviceControlService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetPanoramicSpectrum_(DeviceControlService_method_names[2], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_StartDiscreteBand_(DeviceControlService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StopDiscreteBand_(DeviceControlService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDiscreteBandSpectrum_(DeviceControlService_method_names[5], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_StartSignalAnalysis_(DeviceControlService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StopSignalAnalysis_(DeviceControlService_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSignalAnalysisSpectrum_(DeviceControlService_method_names[8], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_GetSignalAnalysisIQ_(DeviceControlService_method_names[9], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_GetSignalAnalysisResult_(DeviceControlService_method_names[10], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_StartDirection_(DeviceControlService_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StopDirection_(DeviceControlService_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDirectionSpectrum_(DeviceControlService_method_names[13], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_GetDirectionResult_(DeviceControlService_method_names[14], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_StartIQ_(DeviceControlService_method_names[15], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StopIQ_(DeviceControlService_method_names[16], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIQData_(DeviceControlService_method_names[17], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_GetDeviceStatus_(DeviceControlService_method_names[18], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  {}

::grpc::Status DeviceControlService::Stub::StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StartPanoramic_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartPanoramic_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StartPanoramic(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartPanoramic_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStartPanoramicRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StartPanoramic_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStartPanoramicRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStartPanoramicRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DeviceControlService::Stub::StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StopPanoramic_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopPanoramic_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StopPanoramic(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopPanoramic_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStopPanoramicRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StopPanoramic_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStopPanoramicRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStopPanoramicRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* DeviceControlService::Stub::GetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>::Create(channel_.get(), rpcmethod_GetPanoramicSpectrum_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetPanoramicSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>::Create(stub_->channel_.get(), stub_->rpcmethod_GetPanoramicSpectrum_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* DeviceControlService::Stub::AsyncGetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>::Create(channel_.get(), cq, rpcmethod_GetPanoramicSpectrum_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* DeviceControlService::Stub::PrepareAsyncGetPanoramicSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>::Create(channel_.get(), cq, rpcmethod_GetPanoramicSpectrum_, context, request, false, nullptr);
}

::grpc::Status DeviceControlService::Stub::StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StartDiscreteBand_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartDiscreteBand_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StartDiscreteBand(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartDiscreteBand_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStartDiscreteBandRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StartDiscreteBand_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStartDiscreteBandRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStartDiscreteBandRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DeviceControlService::Stub::StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StopDiscreteBand_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopDiscreteBand_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StopDiscreteBand(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopDiscreteBand_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStopDiscreteBandRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StopDiscreteBand_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStopDiscreteBandRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStopDiscreteBandRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* DeviceControlService::Stub::GetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>::Create(channel_.get(), rpcmethod_GetDiscreteBandSpectrum_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetDiscreteBandSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>::Create(stub_->channel_.get(), stub_->rpcmethod_GetDiscreteBandSpectrum_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* DeviceControlService::Stub::AsyncGetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>::Create(channel_.get(), cq, rpcmethod_GetDiscreteBandSpectrum_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* DeviceControlService::Stub::PrepareAsyncGetDiscreteBandSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>::Create(channel_.get(), cq, rpcmethod_GetDiscreteBandSpectrum_, context, request, false, nullptr);
}

::grpc::Status DeviceControlService::Stub::StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StartSignalAnalysis_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartSignalAnalysis_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StartSignalAnalysis(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartSignalAnalysis_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStartSignalAnalysisRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StartSignalAnalysis_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStartSignalAnalysisRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStartSignalAnalysisRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DeviceControlService::Stub::StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StopSignalAnalysis_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopSignalAnalysis_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StopSignalAnalysis(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopSignalAnalysis_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStopSignalAnalysisRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StopSignalAnalysis_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStopSignalAnalysisRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStopSignalAnalysisRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* DeviceControlService::Stub::GetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>::Create(channel_.get(), rpcmethod_GetSignalAnalysisSpectrum_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetSignalAnalysisSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>::Create(stub_->channel_.get(), stub_->rpcmethod_GetSignalAnalysisSpectrum_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* DeviceControlService::Stub::AsyncGetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>::Create(channel_.get(), cq, rpcmethod_GetSignalAnalysisSpectrum_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* DeviceControlService::Stub::PrepareAsyncGetSignalAnalysisSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>::Create(channel_.get(), cq, rpcmethod_GetSignalAnalysisSpectrum_, context, request, false, nullptr);
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* DeviceControlService::Stub::GetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(channel_.get(), rpcmethod_GetSignalAnalysisIQ_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetSignalAnalysisIQ(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(stub_->channel_.get(), stub_->rpcmethod_GetSignalAnalysisIQ_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* DeviceControlService::Stub::AsyncGetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(channel_.get(), cq, rpcmethod_GetSignalAnalysisIQ_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* DeviceControlService::Stub::PrepareAsyncGetSignalAnalysisIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(channel_.get(), cq, rpcmethod_GetSignalAnalysisIQ_, context, request, false, nullptr);
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* DeviceControlService::Stub::GetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>::Create(channel_.get(), rpcmethod_GetSignalAnalysisResult_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetSignalAnalysisResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>::Create(stub_->channel_.get(), stub_->rpcmethod_GetSignalAnalysisResult_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* DeviceControlService::Stub::AsyncGetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>::Create(channel_.get(), cq, rpcmethod_GetSignalAnalysisResult_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* DeviceControlService::Stub::PrepareAsyncGetSignalAnalysisResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>::Create(channel_.get(), cq, rpcmethod_GetSignalAnalysisResult_, context, request, false, nullptr);
}

::grpc::Status DeviceControlService::Stub::StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StartDirection_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartDirection_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StartDirection(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartDirection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStartDirectionRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StartDirection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStartDirectionRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStartDirectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DeviceControlService::Stub::StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StopDirection_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopDirection_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StopDirection(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopDirection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStopDirectionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StopDirection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStopDirectionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStopDirectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* DeviceControlService::Stub::GetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>::Create(channel_.get(), rpcmethod_GetDirectionSpectrum_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetDirectionSpectrum(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>::Create(stub_->channel_.get(), stub_->rpcmethod_GetDirectionSpectrum_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* DeviceControlService::Stub::AsyncGetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>::Create(channel_.get(), cq, rpcmethod_GetDirectionSpectrum_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* DeviceControlService::Stub::PrepareAsyncGetDirectionSpectrumRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>::Create(channel_.get(), cq, rpcmethod_GetDirectionSpectrum_, context, request, false, nullptr);
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* DeviceControlService::Stub::GetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>::Create(channel_.get(), rpcmethod_GetDirectionResult_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetDirectionResult(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>::Create(stub_->channel_.get(), stub_->rpcmethod_GetDirectionResult_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* DeviceControlService::Stub::AsyncGetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>::Create(channel_.get(), cq, rpcmethod_GetDirectionResult_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* DeviceControlService::Stub::PrepareAsyncGetDirectionResultRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>::Create(channel_.get(), cq, rpcmethod_GetDirectionResult_, context, request, false, nullptr);
}

::grpc::Status DeviceControlService::Stub::StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StartIQ_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartIQ_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StartIQ(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StartIQ_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStartIQRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StartIQ_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStartIQRaw(::grpc::ClientContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStartIQRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DeviceControlService::Stub::StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_StopIQ_, context, request, response);
}

void DeviceControlService::Stub::experimental_async::StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopIQ_, context, request, response, std::move(f));
}

void DeviceControlService::Stub::experimental_async::StopIQ(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_StopIQ_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::PrepareAsyncStopIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_StopIQ_, context, request);
}

::grpc::ClientAsyncResponseReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply>* DeviceControlService::Stub::AsyncStopIQRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncStopIQRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* DeviceControlService::Stub::GetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(channel_.get(), rpcmethod_GetIQData_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetIQData(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(stub_->channel_.get(), stub_->rpcmethod_GetIQData_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* DeviceControlService::Stub::AsyncGetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(channel_.get(), cq, rpcmethod_GetIQData_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* DeviceControlService::Stub::PrepareAsyncGetIQDataRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>::Create(channel_.get(), cq, rpcmethod_GetIQData_, context, request, false, nullptr);
}

::grpc::ClientReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* DeviceControlService::Stub::GetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>::Create(channel_.get(), rpcmethod_GetDeviceStatus_, context, request);
}

void DeviceControlService::Stub::experimental_async::GetDeviceStatus(::grpc::ClientContext* context, ::google::protobuf::Empty* request, ::grpc::experimental::ClientReadReactor< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>::Create(stub_->channel_.get(), stub_->rpcmethod_GetDeviceStatus_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* DeviceControlService::Stub::AsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>::Create(channel_.get(), cq, rpcmethod_GetDeviceStatus_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* DeviceControlService::Stub::PrepareAsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>::Create(channel_.get(), cq, rpcmethod_GetDeviceStatus_, context, request, false, nullptr);
}

DeviceControlService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StartPanoramic(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StopPanoramic(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[2],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* writer) {
               return service->GetPanoramicSpectrum(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StartDiscreteBand(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StopDiscreteBand(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[5],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* writer) {
               return service->GetDiscreteBandSpectrum(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StartSignalAnalysis(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StopSignalAnalysis(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[8],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* writer) {
               return service->GetSignalAnalysisSpectrum(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[9],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer) {
               return service->GetSignalAnalysisIQ(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[10],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* writer) {
               return service->GetSignalAnalysisResult(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StartDirection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StopDirection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[13],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* writer) {
               return service->GetDirectionSpectrum(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[14],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* writer) {
               return service->GetDirectionResult(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StartIQ(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* resp) {
               return service->StopIQ(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[17],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer) {
               return service->GetIQData(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeviceControlService_method_names[18],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< DeviceControlService::Service, ::google::protobuf::Empty, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>(
          [](DeviceControlService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* writer) {
               return service->GetDeviceStatus(ctx, req, writer);
             }, this)));
}

DeviceControlService::Service::~Service() {
}

::grpc::Status DeviceControlService::Service::StartPanoramic(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StopPanoramic(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetPanoramicSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::PanoramicScanResult>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StartDiscreteBand(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StopDiscreteBand(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetDiscreteBandSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DiscreteScanResult>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StartSignalAnalysis(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StopSignalAnalysis(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetSignalAnalysisSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisSpectrum>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetSignalAnalysisIQ(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetSignalAnalysisResult(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::SignalAnalysisResult>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StartDirection(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::DirectionRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StopDirection(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetDirectionSpectrum(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionSpectrum>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetDirectionResult(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DirectionResult>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StartIQ(::grpc::ServerContext* context, const ::zb::dcts::node::module::spatailSpectrum::internal::IQRequest* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::StopIQ(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::zb::dcts::node::module::spatailSpectrum::internal::DeviceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetIQData(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::IQResult>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeviceControlService::Service::GetDeviceStatus(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::zb::dcts::node::module::spatailSpectrum::internal::DeviceStatus>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace zb
}  // namespace dcts
}  // namespace node
}  // namespace module
}  // namespace spatailSpectrum
}  // namespace internal

